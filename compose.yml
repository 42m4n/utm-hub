services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    networks:
      - utm_automation
#   command: python manage.py runserver_plus 0.0.0.0:8001 --cert-file ./certs/full.crt --key-file ./certs/asax-2024.key
    command: python manage.py runserver 0.0.0.0:8001
    depends_on:
      redis:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    volumes:
      - ../../test-infra:/opt/terraform
      - ../../test-infra_resources:/opt/terraform_resources
    ports:
      - "8001:8001"
    environment:
        CELERY_BROKER_URL: redis://redis:6379
        CELERY_RESULT_BACKEND: redis://redis:6379/0
        REDIS_HOST: redis
        REDIS_CACHE_LOCATION: redis://redis:6379/2
        RABBITMQ_HOST: rabbit
        RABBITMQ_USERNAME: guest
        RABBITMQ_PASSWORD: guest
        RABBITMQ_EXCHANGE: ""
        DJANGO_SETTING_DEBUG: True
        LANSWEEPER_DB_HOST: fs-assetmgr-srv
        UTM_PATH: 172.20.26.148:443
        UTM_TOKEN: 60xnNkpdfz70H756h1m5HdrbQc4wkm



  redis:
    image: redis:latest
    container_name: redis
    networks:
      - utm_automation
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  rabbit:
    image: rabbitmq:alpine
    ports:
      - "15672:15672"
    networks:
      - utm_automation
    healthcheck:
        test: rabbitmq-diagnostics -q ping

networks:
    utm_automation:
        name: utm_automation
